--- a/setup.py
+++ b/setup.py
@@ -69,49 +69,6 @@
     extra_compile_args = list(base_compile_args)
     define_macros = []
 
-    # setup blosc sources
-    blosc_sources = [f for f in glob('c-blosc/blosc/*.c')
-                     if 'avx2' not in f and 'sse2' not in f]
-    include_dirs = [os.path.join('c-blosc', 'blosc')]
-
-    # add internal complibs
-    blosc_sources += glob('c-blosc/internal-complibs/lz4*/*.c')
-    blosc_sources += glob('c-blosc/internal-complibs/snappy*/*.cc')
-    blosc_sources += glob('c-blosc/internal-complibs/zlib*/*.c')
-    blosc_sources += glob('c-blosc/internal-complibs/zstd*/common/*.c')
-    blosc_sources += glob('c-blosc/internal-complibs/zstd*/compress/*.c')
-    blosc_sources += glob('c-blosc/internal-complibs/zstd*/decompress/*.c')
-    blosc_sources += glob('c-blosc/internal-complibs/zstd*/dictBuilder/*.c')
-    include_dirs += [d for d in glob('c-blosc/internal-complibs/*')
-                     if os.path.isdir(d)]
-    include_dirs += [d for d in glob('c-blosc/internal-complibs/*/*')
-                     if os.path.isdir(d)]
-    define_macros += [('HAVE_LZ4', 1),
-                      ('HAVE_SNAPPY', 1),
-                      ('HAVE_ZLIB', 1),
-                      ('HAVE_ZSTD', 1)]
-    # define_macros += [('CYTHON_TRACE', '1')]
-
-    # SSE2
-    if have_sse2 and not disable_sse2:
-        info('compiling Blosc extension with SSE2 support')
-        extra_compile_args.append('-DSHUFFLE_SSE2_ENABLED')
-        blosc_sources += [f for f in glob('c-blosc/blosc/*.c') if 'sse2' in f]
-        if os.name == 'nt':
-            define_macros += [('__SSE2__', 1)]
-    else:
-        info('compiling Blosc extension without SSE2 support')
-
-    # AVX2
-    if have_avx2 and not disable_avx2:
-        info('compiling Blosc extension with AVX2 support')
-        extra_compile_args.append('-DSHUFFLE_AVX2_ENABLED')
-        blosc_sources += [f for f in glob('c-blosc/blosc/*.c') if 'avx2' in f]
-        if os.name == 'nt':
-            define_macros += [('__AVX2__', 1)]
-    else:
-        info('compiling Blosc extension without AVX2 support')
-
     if have_cython:
         sources = ['numcodecs/blosc.pyx']
     else:
@@ -120,9 +77,9 @@
     # define extension module
     extensions = [
         Extension('numcodecs.blosc',
-                  sources=sources + blosc_sources,
-                  include_dirs=include_dirs,
+                  sources=sources,
                   define_macros=define_macros,
+                  libraries=['blosc'],
                   extra_compile_args=extra_compile_args,
                   ),
     ]
@@ -138,20 +95,8 @@
 
     zstd_sources = []
     extra_compile_args = list(base_compile_args)
-    include_dirs = []
     define_macros = []
 
-    # setup sources - use zstd bundled in blosc
-    zstd_sources += glob('c-blosc/internal-complibs/zstd*/common/*.c')
-    zstd_sources += glob('c-blosc/internal-complibs/zstd*/compress/*.c')
-    zstd_sources += glob('c-blosc/internal-complibs/zstd*/decompress/*.c')
-    zstd_sources += glob('c-blosc/internal-complibs/zstd*/dictBuilder/*.c')
-    include_dirs += [d for d in glob('c-blosc/internal-complibs/zstd*')
-                     if os.path.isdir(d)]
-    include_dirs += [d for d in glob('c-blosc/internal-complibs/zstd*/*')
-                     if os.path.isdir(d)]
-    # define_macros += [('CYTHON_TRACE', '1')]
-
     if have_cython:
         sources = ['numcodecs/zstd.pyx']
     else:
@@ -160,9 +105,9 @@
     # define extension module
     extensions = [
         Extension('numcodecs.zstd',
-                  sources=sources + zstd_sources,
-                  include_dirs=include_dirs,
+                  sources=sources,
                   define_macros=define_macros,
+                  libraries=['zstd'],
                   extra_compile_args=extra_compile_args,
                   ),
     ]
@@ -179,12 +124,6 @@
     extra_compile_args = list(base_compile_args)
     define_macros = []
 
-    # setup sources - use LZ4 bundled in blosc
-    lz4_sources = glob('c-blosc/internal-complibs/lz4*/*.c')
-    include_dirs = [d for d in glob('c-blosc/internal-complibs/lz4*') if os.path.isdir(d)]
-    include_dirs += ['numcodecs']
-    # define_macros += [('CYTHON_TRACE', '1')]
-
     if have_cython:
         sources = ['numcodecs/lz4.pyx']
     else:
@@ -193,9 +132,9 @@
     # define extension module
     extensions = [
         Extension('numcodecs.lz4',
-                  sources=sources + lz4_sources,
-                  include_dirs=include_dirs,
+                  sources=sources,
                   define_macros=define_macros,
+                  libraries=['lz4'],
                   extra_compile_args=extra_compile_args,
                   ),
     ]
